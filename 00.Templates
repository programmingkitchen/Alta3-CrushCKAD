# Create templates

kubectl run nginx --image=nginx --dry-run=client -o yaml > pod-template.yaml

kubectl create deployment my-deployment --image=nginx --replicas=2 --dry-run=client -o yaml > deployment-template.yaml

kubectl expose deployment my-deployment --port=80 --target-port=80 --type=ClusterIP --dry-run=client -o yaml > service-template.yaml


apiVersion: v1
kind: Pod
metadata:
  name: example-pod
  labels:
    app: myapp
spec:
  containers:
  - name: my-container
    image: nginx:1.17
    ports:
    - containerPort: 80




apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-deployment
  labels:
    app: myapp
spec:
  replicas: 2
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
      - name: my-container
        image: nginx:1.17
        ports:
        - containerPort: 80


apiVersion: v1
kind: Service
metadata:
  name: example-service
spec:
  selector:
    app: myapp
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: ClusterIP
